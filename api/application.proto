syntax = "proto3";

package api;

// for grpc-gateway
import "google/api/annotations.proto";

// Application is the service managing applications.
service Application {
	// Create creates the given application.
	rpc Create(CreateApplicationRequest) returns (CreateApplicationResponse) {
		option(google.api.http) = {
			post: "/api/applications"
			body: "*"
		};
	}

	// Get returns the requested application.
	rpc Get(GetApplicationRequest) returns (GetApplicationResponse) {
		option(google.api.http) = {
			get: "/api/applications/{id}"
		};
	}

	// Update updates the given application.
	rpc Update(UpdateApplicationRequest) returns (UpdateApplicationResponse) {
		option(google.api.http) = {
			put: "/api/applications/{id}"
			body: "*"
		};
	}

	// Delete deletes the given application.
	rpc Delete(DeleteApplicationRequest) returns (DeleteApplicationResponse) {
		option(google.api.http) = {
			delete: "/api/applications/{id}"
		};
	}

	// List lists the available applications.
	rpc List(ListApplicationRequest) returns (ListApplicationResponse) {
		option(google.api.http) = {
			get: "/api/applications"
		};
	}
	
	// ListUsers lists the users for an application.
	rpc ListUsers(ListApplicationUsersRequest) returns (ListApplicationUsersResponse) {
		option(google.api.http) = {
			get: "/api/applications/{id}/users"
		};
	}
	
	// AddUser adds a user to an application.
	rpc AddUser(AddApplicationUserRequest) returns (EmptyApplicationUserResponse) {
		option(google.api.http) = {
			post: "/api/applications/{id}/users"
		};
	}
	
	// GetUser gets the user that is associated with the application.
	rpc GetUser(ApplicationUserRequest) returns (GetApplicationUserResponse) {
		option(google.api.http) = {
			get: "/api/applications/{id}/users/{userID}"
		};
	}
	
	// UpdateUser sets the user's access to the associated application.
	rpc UpdateUser(UpdateApplicationUserRequest) returns (EmptyApplicationUserResponse) {
		option(google.api.http) = {
			put: "/api/applications/{id}/users/{userID}"
		};
	}

	// DeleteUser deletes the user's access to the associated application.
	rpc DeleteUser(ApplicationUserRequest) returns (EmptyApplicationUserResponse) {
		option(google.api.http) = {
			put: "/api/applications/{id}/users/{userID}"
		};
	}
}

message CreateApplicationRequest {
	// Name of the application (must be unique).
	string name = 1;

	// Description of the application.
	string description = 2;
}

message CreateApplicationResponse {
	// ID of the application that was created.
	int64 id = 1;
}

message GetApplicationRequest {
	// Name of the application.
	int64 id = 1;
}

message GetApplicationResponse {
	// ID of the application.
	int64 id = 1;

	// Name of the application.
	string name = 2;

	// Description of the application.
	string description = 3;
}

message UpdateApplicationRequest {
	// ID of the application to update.
	int64 id = 1;

	// Name of the application (must be unique).
	string name = 2;

	// Description of the application.
	string description = 3;
}

message UpdateApplicationResponse {}

message DeleteApplicationRequest {
	// ID of the application.
	int64 id = 1;
}

message DeleteApplicationResponse {}

message ListApplicationRequest {
	// Max number of applications to return in the result-test.
	int64 limit = 1;

	// Offset in the result-set (for pagination).
	int64 offset = 2;
}

message ListApplicationResponse {
	// Total number of applications available within the result-set.
	int64 totalCount = 1;
	
	// Applications within this result-set.
	repeated GetApplicationResponse result = 2;
}

message ListApplicationUsersRequest {
	// The id of the application
	int64 id = 1;
	
	// Max number of applications to return in the result-test.
	int64 limit = 2;

	// Offset in the result-set (for pagination).
	int64 offset = 3;
}

message GetApplicationUserResponse {
	// The id of the user
	int64 id = 1;
	
	// The username for the user
	string username = 2;
	
	// Has admin rights.
	bool isAdmin = 3;
}

message ListApplicationUsersResponse {
	// Total number of applications available within the result-set.
	int32 totalCount = 1;
	
	// Applications within this result-set.
	repeated GetApplicationUserResponse result = 2;
}

message AddApplicationUserRequest {
	// The application to be set to allow these users
	int64 id = 1;
	
	// User id
	int64 userID = 2;
	
	// admin rights?
	bool isAdmin = 3;
}

message ApplicationUserRequest {
	// The application id
	int64 id = 1;
	
	// The user id
	int64 userID = 2;
}

message UpdateApplicationUserRequest {
	// The application id
	int64 id = 1;
	
	// The user id
	int64 userID = 2;
	
	// Is admin?
	bool isAdmin = 3;
}

message EmptyApplicationUserResponse {
}

