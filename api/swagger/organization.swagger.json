{
  "swagger": "2.0",
  "info": {
    "title": "organization.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/organizations": {
      "get": {
        "summary": "Get organization list.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiListOrganizationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of organizations to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "description": "When provided, the given string will be used to search on\ndisplayName.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "summary": "Create a new organization.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiCreateOrganizationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "summary": "Get data for a particular organization.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiGetOrganizationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "summary": "Delete an organization.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiOrganizationEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "summary": "Update an existing organization.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiOrganizationEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/organizations/{id}/users": {
      "get": {
        "summary": "Get organization's user list.",
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiListOrganizationUsersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Max number of users to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "summary": "Add a new user to an organization.",
        "operationId": "AddUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiOrganizationEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiOrganizationUserRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/api/organizations/{id}/users/{userID}": {
      "get": {
        "summary": "Get data for a particular organization user.",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiGetOrganizationUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "summary": "Delete a user from an organization.",
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiOrganizationEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "summary": "Update a user in an organization.",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiOrganizationEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiOrganizationUserRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    }
  },
  "definitions": {
    "apiCreateOrganizationRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Organization name."
        },
        "displayName": {
          "type": "string",
          "description": "Organization display name."
        },
        "canHaveGateways": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can the organization create and \"own\" Gateways?"
        }
      },
      "description": "Add a new organization."
    },
    "apiCreateOrganizationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of the organization."
        }
      }
    },
    "apiGetOrganizationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of the user."
        },
        "name": {
          "type": "string",
          "description": "Organization name."
        },
        "displayName": {
          "type": "string",
          "description": "Organization display name."
        },
        "canHaveGateways": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can the organization create and \"own\" Gateways?"
        },
        "createdAt": {
          "type": "string",
          "description": "When the user was created."
        },
        "updatedAt": {
          "type": "string",
          "description": "When the user was last updated (excludes changes in application access)."
        }
      }
    },
    "apiGetOrganizationUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of the user."
        },
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "If the user is a system admin, capable of creating other users."
        },
        "createdAt": {
          "type": "string",
          "description": "When the user was created."
        },
        "updatedAt": {
          "type": "string",
          "description": "When the user was last updated (excludes changes in application access)."
        }
      },
      "title": "Response for a user in the organization"
    },
    "apiListOrganizationResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiGetOrganizationResponse"
          }
        }
      }
    },
    "apiListOrganizationUsersResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of users in the organization."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiGetOrganizationUserResponse"
          },
          "description": "The users in the requested limit, offset range."
        }
      },
      "description": "Response for the users in an organization."
    },
    "apiOrganizationEmptyResponse": {
      "type": "object"
    },
    "apiOrganizationUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "The organization id."
        },
        "userID": {
          "type": "string",
          "format": "int64",
          "description": "The user's id."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "title": "The user's admin status for the organization"
        }
      }
    },
    "apiUpdateOrganizationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the organization to be updated."
        },
        "name": {
          "type": "string",
          "description": "The new name."
        },
        "displayName": {
          "type": "string",
          "description": "The new display name."
        },
        "canHaveGateways": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can the organization create and \"own\" Gateways?"
        }
      },
      "description": "Not quite the AddOrganizationRequest."
    }
  }
}
