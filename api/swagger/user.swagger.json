{
  "swagger": "2.0",
  "info": {
    "title": "user.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/internal/login": {
      "post": {
        "summary": "Log in a user",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiLoginResponse"
            }
          }
        },
        "tags": [
          "Internal"
        ]
      }
    },
    "/api/internal/profile": {
      "get": {
        "summary": "Get the current user's profile",
        "operationId": "Profile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiProfileResponse"
            }
          }
        },
        "tags": [
          "Internal"
        ]
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get user list.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiListUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of user to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "summary": "Create a new user.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiAddUserResponse"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get data for a particular user.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Delete a user.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiUserEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Update an existing user.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiUserEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/{id}/password": {
      "put": {
        "summary": "UpdatePassword updates a password.",
        "operationId": "UpdatePassword",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiUserEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "apiAddUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "password": {
          "type": "string",
          "description": "Passowrd of the user."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "If the user is a system-wide admin."
        }
      },
      "description": "Add a new user. Not quite the UserSettings data as it includes a password\nand excludes the ID and create/update dates."
    },
    "apiAddUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiApplicationLink": {
      "type": "object",
      "properties": {
        "applicationID": {
          "type": "string",
          "format": "int64"
        },
        "applicationName": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      },
      "description": "Defines the applications that the user is associated with."
    },
    "apiListUserRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Max number of user to return in the result-set."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset in the result-set (for pagination)."
        }
      },
      "description": "Request the users defined in the system."
    },
    "apiListUserResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiUserResponse"
          }
        }
      }
    },
    "apiLoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "password": {
          "type": "string",
          "description": "Password of the user."
        }
      },
      "description": "The data for logging in to the system.  The connection is expected to be\nprotected by SSL, allowing us to use the username and password in the clear."
    },
    "apiLoginResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string",
          "description": "The JWT tag to be used to access lora-app-server interfaces."
        },
        "profile": {
          "$ref": "#/definitions/apiProfileResponse",
          "description": "The user's profile (provided as a convenience so an additional call to\nget the profile can be avoided)."
        }
      },
      "description": "The response to the login request upon success. The jwt token is to be\nplaced in the header field named \"Grpc-Metadata-Authorization\" for all\nsubsequent queries to the server."
    },
    "apiProfileRequest": {
      "type": "object",
      "description": "The request for profile requires not input as the profile is returned for\nthe logged in user based on the JWT token passed in."
    },
    "apiProfileResponse": {
      "type": "object",
      "properties": {
        "userProfile": {
          "$ref": "#/definitions/apiUserProfile"
        }
      },
      "description": "The user's profile. This specifies the access the user has to the data\nand should be used limit what the UI presents as options (e.g., read-only\naccess to an application should not allow an \"edit\" button on that\napplication)."
    },
    "apiUpdateUserPasswordRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the user for which to update the password."
        },
        "password": {
          "type": "string",
          "description": "The new password to set."
        }
      }
    },
    "apiUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "The ID of the user to be updated."
        },
        "username": {
          "type": "string",
          "description": "The new username."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "If the user is a system-wide admin."
        }
      },
      "description": "Not quite the AddUserRequest as no password."
    },
    "apiUserEmptyResponse": {
      "type": "object"
    },
    "apiUserInfo": {
      "type": "object",
      "properties": {
        "userSettings": {
          "$ref": "#/definitions/apiUserSettings"
        },
        "userProfile": {
          "$ref": "#/definitions/apiUserProfile"
        }
      },
      "description": "UserInfo includes the general login settings as well as the user profile."
    },
    "apiUserProfile": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiApplicationLink"
          }
        }
      },
      "description": "The user profile, indicating the capabilities of the user."
    },
    "apiUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Request the user information."
    },
    "apiUserResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/apiUserInfo",
          "description": "The user settings and profile."
        }
      }
    },
    "apiUserSettings": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "ID of the user."
        },
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "If the user is a system admin, capable of creating other users."
        },
        "createdAt": {
          "type": "string",
          "description": "When the user was created."
        },
        "updatedAt": {
          "type": "string",
          "description": "When the user was last updated (excludes changes in application access)."
        }
      },
      "description": "User data not including the data access profile."
    }
  }
}
